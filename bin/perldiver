#!/usr/bin/perl

use strict;
use warnings;

our $VERSION = '0.01';

use autodie;
use Pod::Man;
use Getopt::Long qw(:config autohelp autoversion);

use PerlDiver;

my %opts = (
    url      => 'http://api.metacpan.org/v0',
    pager    => $ENV{PAGER},
    search   => 0,
    pod      => 1,
    source   => 0,
    function => 0,
    variable => 0,
    local    => 0,
);

GetOptions( \%opts, 'url=s', 'pager=s', 'search', 'pod', 'local', 'function|f',
    'variable|v', 'source' )
  or Getopt::Long::HelpMessage(255);

my @targets = @ARGV
  or Getopt::Long::HelpMessage(
    { -msg => 'No arguments provided.', -exitval => 255 } );

$opts{local} = 1 if $opts{variable} or $opts{function};

my @backends
  = $opts{local}
  ? ( PerlDiver::Local->new() )
  : ( PerlDiver::Local->new(), PerlDiver::MetaCPAN->new( url => $opts{url} ) );

if ( $opts{search} ) {
    my @results;
    foreach my $be (@backends) {
        push @results, $be->search(@targets);
    }
    warn "Search returned no results (@targets)."
      unless @results;
    foreach my $result (@results) {
        print "$result->{distribution} - $result->{abstract}\n";
    }
}
elsif ( $opts{source} ) {
    foreach my $target (@targets) {
        my ( $source, $ft );
        foreach my $be (@backends) {
            ( $source, $ft )
              = eval { $be->source( $target, \%opts ) } and last;
        }
        warn "Could not locate source for '$target'.\n" and next
          unless $source;
        my $parser = Pod::Man->new( name => $target, section => 3 );
        open PAGER, '|-', 'vim', "+set ft=$ft", '-R', '-';
        print PAGER $source;
        close PAGER;
    }
}
elsif ( $opts{pod} ) {
    foreach my $target (@targets) {
        my $pod;
        foreach my $be (@backends) {
            $pod = eval { $be->pod( $target, \%opts ) } and last;
        }
        warn "Could not locate pod for '$target'.\n" and next
          unless $pod;
        my $parser = Pod::Man->new( name => $target, section => 3 );
        open PAGER, '|-', 'man', '-l', '-';
        $parser->output_fh(*PAGER);
        $parser->parse_string_document($pod);
        close PAGER;
    }
}

__END__

=head1 NAME

perldiver

=head1 SYNOPSIS

 perldiver [--pod|--search|--function] <PageName|ModuleName|ProgName|FileName>

=head1 DESCRIPTION

=head2 OPTIONS

=over

=item B<--pod>

Retrieve and display pod documentation for the supplied page, module, or
program.

=item B<--search>

Search for modules that match the provided targets.

=item B<--function>, B<-f>

Treat arguments as built-in perl functions.  Equivalent to C<perldoc -f
<function>>.

=item B<--variable>, B<-v>

Treat arguments as built-in perl variable.  Equivalent to C<perldoc -v
<perlvar>>.

=item B<--local>

Do not search remote repositories.

=back
